--- Makefile-milc	2023-09-20 11:03:10.068579400 -0500
+++ Makefile-rocm	2023-09-20 11:02:59.750618000 -0500
@@ -11,42 +11,40 @@
 #----------------------------------------------------------------------
 #  User choices - edit to suit 
 #----------------------------------------------------------------------
-# 1. Host and accelerator architecture.  Controls optimization flags here and in libraries.
+# 1. Machine architecture.  Controls optimization flags here and in libraries.
 #    Can control BINEXT below, a suffix appended to the name of the executable.
 
-ARCH ?= # skx knl hsw pow8 pow9
-GPU_ARCH ?= # nvidia amd intel
+ARCH ?= mi100 # skx knl knc hsw pow8 pow9
 
 #----------------------------------------------------------------------
 # 2. Compiler family
 
-COMPILER ?= gnu # intel, ibm, cray-intel, rocm
-OFFLOAD ?= # CUDA HIP SYCL OpenMP
+COMPILER ?= rocm #gnu # intel, ibm, portland, cray-intel
 
 #----------------------------------------------------------------------
 # 3. MPP vs Scalar
 
-# Compiling with MPI?  false for a scalar machine
-MPP ?= false
+# Compiling for a parallel machine?  blank for a scalar machine
+MPP ?= true #false
 
 #----------------------------------------------------------------------
-# 4. Generic Precision 
+# 4. Precision 
 
 # 1 = single precision; 2 = double
-PRECISION ?= 2
+PRECISION ?= 2 #1
 
 #----------------------------------------------------------------------
-# 5. Set compiler.
+# 5. Compiler
 # Choices include mpicc cc gcc pgcc g++
 
 ifeq ($(strip ${COMPILER}),intel)
 
   ifeq ($(strip ${MPP}),true)
-    MY_CC ?= mpicc
-    MY_CXX ?= mpicxx
+    MY_CC ?= mpiicc
+    MY_CXX ?= mpiicpc
   else
-    MY_CC  ?= icx
-    MY_CXX ?= dpcpp
+    MY_CC  ?= icc
+    MY_CXX ?= icpc
   endif
 
 else ifeq ($(strip ${COMPILER}),cray-intel)
@@ -79,34 +77,34 @@
     MY_CXX ?= xlc++_r
   endif
 
-endif
-
-# Accelerator
-
-ifeq ($(strip ${GPU_ARCH}),intel)
+else ifeq ($(strip ${COMPILER}),rocm)
 
   ifeq ($(strip ${MPP}),true)
-    MY_CC += -cc=icx
-    MY_CXX += -cxx=dpcpp
+    MY_CC ?= hipcc
+    MY_CXX ?= hipcc
+  else
+    MY_CC ?= gcc
+    MY_CXX ?= g++
   endif
 
-endif
-
-# Offload type
-
-ifeq ($(strip ${OFFLOAD}),SYCL)
-
-  MY_CXX += -fsycl
 
 endif
 
 CC = ${MY_CC}
 CXX = ${MY_CXX}
 
-# If the above construction doesn't work, override the definitions here
+# Override the above definitions
+
+# ifeq ($(strip ${MPP}),true)
+#   CC = mpiicc
+#   CXX = mpiicpc
+# else
+#   CC  = icc
+#   CXX = icpc
+# endif
 
-# CC =
-# CXX =
+#CC = /usr/local/mvapich/bin/mpicc  # FNAL
+#CXX =  /usr/local/mvapich/bin/mpiCC  # FNAL
 
 #----------------------------------------------------------------------
 # 6. Compiler optimization level
@@ -193,8 +191,8 @@
   OCFLAGS += ${ARCH_FLAG}
   OCXXFLAGS += ${ARCH_FLAG}
   LDFLAGS += ${ARCH_FLAG}
-  OCFLAGS += -parallel-source-info=2 -debug inline-debug-info -fsave-optimization-record
-  OCXXFLAGS += -parallel-source-info=2 -debug inline-debug-info -fsave-optimization-record
+  OCFLAGS += -parallel-source-info=2 -debug inline-debug-info -qopt-report=5
+  OCXXFLAGS += -parallel-source-info=2 -debug inline-debug-info -qopt-report=5
 
   ifeq ($(strip ${OMP}),true)
     OCFLAGS += -qopenmp
@@ -311,14 +309,14 @@
 # Edit these locations for the installed SciDAC packages
 # It is assumed that these are the parents of "include" and "lib"
 
-SCIDAC = ${HOME}/scidac/install
+SCIDAC = ${INSTALLROOT}
 TAG=
 # Parallel versions
 QMPPAR ?= ${SCIDAC}/qmp${TAG}
 QIOPAR ?= $(SCIDAC)/qio${TAG}
 # Single processor versions
-QMPSNG ?= ${SCIDAC}/qmp-single${TAG}
-QIOSNG ?= $(SCIDAC)/qio-single${TAG}
+QMPSNG ?= ${SCIDAC}/qmp${TAG}
+QIOSNG ?= $(SCIDAC)/qio${TAG}
 QLA ?= ${SCIDAC}/qla${TAG}
 # Either version
 QDP ?= ${SCIDAC}/qdp${TAG}
@@ -419,7 +417,7 @@
 #----------------------------------------------------------------------
 # 15. GPU/QUDA Options
 
-WANTQUDA    ?= false
+WANTQUDA    ?= #true
 
 ifeq ($(strip ${WANTQUDA}),true)
 
@@ -428,37 +426,32 @@
 WANT_FL_GPU ?= #true
 WANT_FF_GPU ?= #true
 WANT_GF_GPU ?= #true
-WANT_EIG_GPU ?= #true
-WANT_GSMEAR_GPU ?= #true
-WANT_KS_CONT_GPU ?= #true
-WANT_SHIFT_GPU ?= #true
-WANT_SPIN_TASTE_GPU ?= #true
-WANT_GAUGEFIX_OVR_GPU ?= #true
 
 endif
 
 # enabled mixed-precision solvers for QUDA (if set, overrides HALF_MIXED and MAX_MIXED macros)
-WANT_MIXED_PRECISION_GPU ?= 2
+WANT_MIXED_PRECISION_GPU ?= 0
 
 ifeq ($(strip ${WANTQUDA}),true)
-  ifeq ($(strip ${OFFLOAD}),)
-    OFFLOAD = CUDA
-  endif
 
   QUDA_HOME ?= ${HOME}/quda
+  ROCM_PATH ?= /opt/rocm
 
   INCQUDA = -I${QUDA_HOME}/include -I${QUDA_HOME}/tests
   PACKAGE_HEADERS += ${QUDA_HOME}/include
-  LIBQUDA ?= -Wl,-rpath ${QUDA_HOME}/lib -L${QUDA_HOME}/lib -lquda
+  LIBQUDA = -Wl,-rpath ${QUDA_HOME}/lib -L${QUDA_HOME}/lib -lquda -ldl
   QUDA_LIBRARIES = ${QUDA_HOME}/lib
-  QUDA_HEADERS = ${QUDA_HOME}/include
-
-  ifeq ($(strip ${OFFLOAD}),CUDA)
+  ifeq ($(strip ${ARCH}),mi100)
+    LIBQUDA += -D__gfx908 --amdgpu-target=gfx908 -Wl,-rpath=${ROCM_PATH}/hiprand/lib -L${ROCM_PATH}/hiprand/lib -Wl,-rpath=${ROCM_PATH}/rocfft/lib -L${ROCM_PATH}/rocfft/lib -lhiprand -lrocfft -Wl,-rpath=${ROCM_PATH}/hipblas/lib -L${ROCM_PATH}/hipblas/lib -lhipblas -Wl,-rpath=${ROCM_PATH}/rocblas/lib -L${ROCM_PATH}/rocblas/lib -lrocblas -Wl,-rpath=${ROCM_PATH}/hip/lib
+  else ifeq ($(strip ${ARCH}),mi200)
+    LIBQUDA += -D__gfx90a --amdgpu-target=gfx90a -Wl,-rpath=${ROCM_PATH}/hiprand/lib -L${ROCM_PATH}/hiprand/lib -Wl,-rpath=${ROCM_PATH}/rocfft/lib -L${ROCM_PATH}/rocfft/lib -lhiprand -lrocfft -Wl,-rpath=${ROCM_PATH}/hipblas/lib -L${ROCM_PATH}/hipblas/lib -lhipblas -Wl,-rpath=${ROCM_PATH}/rocblas/lib -L${ROCM_PATH}/rocblas/lib -lrocblas -Wl,-rpath=${ROCM_PATH}/hip/lib
+  else
     CUDA_HOME ?= /usr/local/cuda
     INCQUDA += -I${CUDA_HOME}/include
     PACKAGE_HEADERS += ${CUDA_HOME}/include
-    LIBQUDA += -L${CUDA_HOME}/lib64 -L${CUDA_MATH}/lib64 -L${CUDA_COMP}/lib -lcudart -lcuda -lcublas -lcufft -ldl
+    LIBQUDA += -L${CUDA_HOME}/lib64 -lcudart -lcuda -lcublas -lcufft -lcublas
   endif
+  QUDA_HEADERS = ${QUDA_HOME}/include
 
 # Definitions of compiler macros -- don't change.  Could go into a Make_template_QUDA
 
@@ -474,11 +467,6 @@
     CGPU += -DUSE_CG_GPU
   endif
 
-  ifeq ($(strip ${WANT_GA_GPU}),true)
-    HAVE_GA_GPU = true
-    CGPU += -DUSE_GA_GPU
-  endif
-
   ifeq ($(strip ${WANT_GF_GPU}),true)
     HAVE_GF_GPU = true
     CGPU += -DUSE_GF_GPU
@@ -494,55 +482,16 @@
     CGPU += -DUSE_FF_GPU
   endif
 
-  ifeq ($(strip ${WANT_EIG_GPU}),true)
-    HAVE_EIG_QUDA = true
-    CGPU += -DUSE_EIG_GPU
-  endif
-
-  ifeq ($(strip ${WANT_GSMEAR_GPU}),true)
-    HAVE_GSMEAR_QUDA = true
-    CGPU += -DUSE_GSMEAR_QUDA
-  endif
-
-  ifeq ($(strip ${WANT_KS_CONT_GPU}),true)
-    HAVE_KS_CONT_GPU = true
-    CGPU += -DUSE_KS_CONT_GPU
-  endif
-
-  ifeq ($(strip ${WANT_SHIFT_GPU}),true)
-    HAVE_SHIFT_GPU = true
-    CGPU += -DUSE_SHIFT_GPU
-  endif
-
-  ifeq ($(strip ${WANT_SPIN_TASTE_GPU}),true)
-    HAVE_SPIN_TASTE_GPU = true
-    CGPU += -DUSE_SPIN_TASTE_GPU
-  endif
-
-  ifeq ($(strip ${WANT_GAUGEFIX_OVR_GPU}),true)
-    HAVE_GAUGEFIX_OVR_QUDA = true
-    CGPU += -DUSE_GAUGEFIX_OVR_GPU
-  endif
-
   ifeq ($(strip ${WANT_MIXED_PRECISION_GPU}),1)
     CGPU += -DHALF_MIXED # use single precision where appropriate
   else ifeq ($(strip ${WANT_MIXED_PRECISION_GPU}),2)
     CGPU += -DMAX_MIXED # use half precision where appropriate
   endif
 
-# Verbosity choices:
+# Verbosity choices: 
 # SET_QUDA_SILENT, SET_QUDA_SUMMARIZE, SET_QUDA_VERBOSE, SET_QUDA_DEBUG_VERBOSE
 
-  QUDA_VERBOSITY ?= SUMMARIZE
-  ifeq ($(strip ${QUDA_VERBOSITY}),SILENT)
-    CGPU += -DSET_QUDA_SILENT # silent output
-  else ifeq ($(strip ${QUDA_VERBOSITY}),SUMMARIZE)
-    CGPU += -DSET_QUDA_SUMMARIZE # summary output
-  else ifeq ($(strip ${QUDA_VERBOSITY}),VERBOSE)
-    CGPU += -DSET_QUDA_VERBOSE # verbose output, outputs autotuning information, residual history of solvers
-  else ifeq ($(strip ${QUDA_VERBOSITY}),DEBUG_VERBOSE)
-    CGPU += -DSET_QUDA_DEBUG_VERBOSE # debug-level output
-  endif
+  CGPU += -DSET_QUDA_SUMMARIZE
 
 endif
 
@@ -612,61 +561,9 @@
 endif
 
 #----------------------------------------------------------------------
-# 16. Hadrons Options
-
-WANTHADRONS ?= false # true implies WANTGRID = true
-
-ifeq ($(strip ${WANTHADRONS}), true)
-
-  HAVE_HADRONS = true
-  CPHI += -DHAVE_HADRONS
-
-  ifeq ($(strip ${MPP}),true)
-    ifeq ($(strip ${ARCH}),knl)
-      HADRONS_ARCH = avx512
-    else ifeq ($(strip ${ARCH}),skx)
-      HADRONS_ARCH = avx512
-    else ifeq ($(strip ${ARCH}),hsw)
-      HADRONS_ARCH = avx2
-    endif
-  else
-    # Scalar version                                                                
-
-    HADRONS_ARCH = scalar
-
-  endif
-
-  HADRONS_HOME = ../Grid/install-hadrons-${HADRONS_ARCH}
-  HADRONS_LIBRARIES = ${HADRONS_HOME}/lib
-  LIBHADRONS = -L${HADRONS_LIBRARIES} -lHadrons -ldl
-  HADRONS_HEADERS = ${HADRONS_HOME}/include
-  INCHADRONS = -I${HADRONS_HEADERS}
-
-  PACKAGE_HEADERS += ${HADRONS_HEADERS}/Hadrons
-  PACKAGE_DEPS += Hadrons
-
-  LDFLAGS += -fopenmp
-
-endif
-
-#----------------------------------------------------------------------
 # 16. Grid Options
 
-WANTGRID ?= false
-
-ifeq ($(strip ${WANTHADRONS}), true)
-  WANTGRID = true
-endif
-
-ifeq ($(strip ${WANTGRID}),true)
-
-  WANT_FN_CG_GPU ?= #true    // Automatic for now
-  WANT_FL_GPU ?= true       // Under development
-  WANT_FF_GPU ?= #true       // Future
-  WANT_GF_GPU ?= #true       // Future
-  WANT_EIG_GPU ?= #true     // Automatic for now
-
-endif
+WANTGRID = #true
 
 ifeq ($(strip ${WANTGRID}), true)
 
@@ -675,7 +572,6 @@
 
   CPHI += -DGRID_MULTI_CG=GRID_5DCG # Choices: GRID_BLOCKCG GRID_5DCG GRID_MRHSCG
   CPHI += -DGRID_SHMEM_MAX=2048
-  CPHI += -DGRID_ACCELERATOR_THREADS=8
 
   ifeq ($(strip ${MPP}),true)
     ifeq ($(strip ${ARCH}),knl)
@@ -692,9 +588,9 @@
 
   endif
 
-  GRID_HOME = ../Grid/install-grid-${GRID_ARCH}
+  GRID_HOME = ../Grid/install-${GRID_ARCH}
   GRID_LIBRARIES = ${GRID_HOME}/lib
-  LIBGRID = -L${GRID_LIBRARIES} -lGrid -lcrypto -lz
+  LIBGRID = -L${GRID_LIBRARIES} -lGrid
   GRID_HEADERS = ${GRID_HOME}/include
   INCGRID = -I${GRID_HEADERS}
 
@@ -817,12 +713,6 @@
 #     Define them with a -D prefix.
 
 #------------------------------
-# git code version
-
-GIT_VERSION := "$(shell git describe --abbrev=4 --dirty --always --tags)"
-CGITVER = -DMILC_CODE_VERSION=\"$(GIT_VERSION)\"
-
-#------------------------------
 # Print timing statistics.
 # Applications: many
 
@@ -879,7 +769,6 @@
 
 # Prior to version 7.7.2 the conversion from staggeredd to naive was peculiar.
 CCOMPAT += #-DOLD_STAGGERED2NAIVE
-CCOMPAT += #-DOLD_GAUSSRAND
 
 #------------------------------
 # Layout
@@ -1075,20 +964,19 @@
 #----------------------------------------------------------------------
 # Extra include paths
 
-INCADD = ${INCFFTW} ${INCPRIMME} ${INCQUDA} ${INCQPHIX} ${INCQPHIXJ} ${INCHADRONS} ${INCGRID} ${INCVTUNE}
+INCADD = ${INCFFTW} ${INCPRIMME} ${INCQUDA} ${INCQPHIX} ${INCQPHIXJ} ${INCGRID} ${INCVTUNE}
 
 #----------------------------------------------------------------------
 #  Extra libraries
 
-LIBADD = ${LIBFFTW} ${LIBPRIMME} ${LIBARPACK} ${LIBLAPACK} ${LIBQUDA} ${LIBQPHIX} \
-  ${LIBQPHIXJ} ${LIBHADRONS} ${LIBGRID} ${LIBVTUNE}
+LIBADD = ${LIBFFTW} ${LIBPRIMME} ${LIBARPACK} ${LIBLAPACK} ${LIBQUDA} ${LIBQPHIX} ${LIBQPHIXJ} ${LIBGRID} ${LIBVTUNE}
 
 #------------------------------
 # Summary
 
 CODETYPE = ${CTIME} ${CPROF} ${CDEBUG} ${CGEOM} ${KSCGSTORE} ${CPREFETCH} \
  ${KSCGMULTI} ${KSFFMULTI} ${KSRHMCINT} ${KSSHIFT} ${CLCG} ${CLMEM} ${CQOP} \
- ${CCOMPAT} ${CGITVER}
+ ${CCOMPAT}
 
 #----------------------------------------------------------------------
 # MILC library make file in libraries directory.  
